From 6074f7d8baece7ab4e983977481ca5989499d209 Mon Sep 17 00:00:00 2001
From: Jianming Qiao <jianming.qiao@bp.renesas.com>
Date: Fri, 28 Jun 2019 02:58:03 +0100
Subject: [PATCH 1/1] Fix no test cases are loaded in onnxruntime test code

Properly Handle DT_UNKNOWN when using readdir

Signed-off-by: Jianming Qiao <jianming.qiao@bp.renesas.com>
---
 onnxruntime/core/framework/path_lib.h | 48 ++++++++++++++++++++++++++++++++---
 1 file changed, 45 insertions(+), 3 deletions(-)

diff --git a/onnxruntime/core/framework/path_lib.h b/onnxruntime/core/framework/path_lib.h
index 7845bbf..1781897 100644
--- a/onnxruntime/core/framework/path_lib.h
+++ b/onnxruntime/core/framework/path_lib.h
@@ -15,6 +15,8 @@
 #include <dirent.h>
 #include <time.h>    //strftime
 #include <stddef.h>  //ptrdiff_t
+#include <sys/stat.h>
+#include <unistd.h>
 #endif
 #include "core/common/status.h"
 #include "core/session/onnxruntime_c_api.h"
@@ -253,9 +255,49 @@ void LoopDir(const std::string& dir_name, T func) {
   try {
     struct dirent* dp;
     while ((dp = readdir(dir)) != nullptr) {
-      if (!func(dp->d_name, DTToFileType(dp->d_type))) {
-        break;
-      }
+        if (dp->d_type == DT_UNKNOWN)
+        {
+            std::string path(dp->d_name);
+            struct stat stbuf;
+            memset(&stbuf,0,sizeof(stbuf));
+
+            if(stat((dir_name + "/" + path).c_str(), &stbuf) == -1)
+            {
+                perror("LoopDir stat error");
+            }
+
+            switch (stbuf.st_mode & S_IFMT)
+            {
+                case S_IFBLK:
+                    dp->d_type = DT_BLK;
+                    break;
+                case S_IFCHR:
+                    dp->d_type = DT_CHR;
+                    break;
+                case S_IFDIR:
+                    dp->d_type = DT_DIR;
+                    break;
+                case S_IFIFO:
+                    dp->d_type = DT_FIFO;
+                    break;
+                case S_IFLNK:
+                    dp->d_type = DT_LNK;
+                    break;
+                case S_IFREG:
+                    dp->d_type = DT_REG;
+                    break;
+                case S_IFSOCK:
+                    dp->d_type = DT_SOCK;
+                    break;
+                default:
+                    dp->d_type = DT_UNKNOWN;
+                    break;
+            }
+        }
+
+        if (!func(dp->d_name, DTToFileType(dp->d_type))) {
+            break;
+        }
     }
   } catch (std::exception& ex) {
     closedir(dir);
-- 
2.7.4

